pipeline {
    agent any

    tools {
        // Use the Maven tool defined in Jenkins Global Tool Configuration
        maven 'maven'  // Replace with the name of your Maven installation in Jenkins
    }

    environment {
        JAVA_HOME = '/usr/lib/jvm/java-17-openjdk'  // Adjust to your Java installation path
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from your repository
               sh 'echo passed'
                //git 'https://github.com/Muralidharan2705/Test-App.git'  // Replace with your repo URL
            }
        }

        stage('Build and Package') {
            steps {
                // Run Maven clean and package using Jenkins Maven Plugin
                script {
                    echo 'Running Maven clean and package...'
                    sh "'${tool 'maven'}/bin/mvn' clean package"  // Using the Maven tool configured in Jenkins
                }
            }
        }

        stage('Archive Artifacts') {
            steps {
                // Archive the resulting build artifact (e.g., JAR, WAR)
                archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true  // Adjust based on your packaging
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            // You can include any cleanup tasks here, if necessary
        }

        success {
            echo 'Build and packaging completed successfully!'
        }

        failure {
            echo 'Build failed. Check the logs for errors!'
        }
    }
}
